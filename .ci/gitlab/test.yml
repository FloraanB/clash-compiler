stages:
  - build
  - test

.common:
  image: docker.pkg.github.com/clash-lang/clash-compiler/clash-ci:2020-11-20
  timeout: 2 hours
  stage: build
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    TERM: xterm-color
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
  cache:
    key: cabal-store-$CI_JOB_NAME-$GHC_VERSION
    when: always
    paths:
      - cache.tar.zst
  before_script:
    - unset SNAPCRAFT_LOGIN_FILE
    - unset HACKAGE_PASSWORD
    - export THREADS=$(nproc)
    - export CABAL_JOBS=$(nproc)
    - export
    - apt update && apt install zstd jq -y
    - tar -xf cache.tar.zst -C / || true
    - .ci/setup.sh
  after_script:
    - tar -cf - $(ls -d /root/.cabal /root/.stack || true) | zstd -T${THREADS} -3 > cache.tar.zst
  tags:
    - local

.test-common-local:
  extends: .common
  needs: ["build"]
  stage: test
  before_script:
    - unset SNAPCRAFT_LOGIN_FILE
    - unset HACKAGE_PASSWORD
    - export THREADS=$(nproc)
    - export CABAL_JOBS=$(nproc)
    - export
    - apt update && apt install zstd jq -y
    - tar -xf cache.tar.zst -C / || true
    - tar -xf dist.tar.zst -C /
    - .ci/setup.sh

    # Not all package in cache get packed into dist.tar.zst, so we need to
    # regenerate the package database
    - ghc-pkg recache --package-db=$HOME/.cabal/store/ghc-$GHC_VERSION/package.db
  after_script:
    - tar -cf - /root/.cabal/packages | zstd -T${THREADS} -3 > cache.tar.zst
  tags:
    - local

.test-common:
  extends: .test-common-local
  # Run on shared runners
  tags:

# 'build' publishes its build files as an artifact. These build files are reused
# by 'prelude:doctests', 'prelude:unittests', 'lib:unittests'
# and 'suite-{verilog,vhdl}'.
build:
  extends: .common
  artifacts:
    when: always
    name: "$CI_JOB_NAME-$CI_COMMIT_SHA-$GHC_VERSION"
    paths:
      - dist.tar.zst
    expire_in: 1 day
  script:
    - .ci/build.sh

    # Archive all build files (from .cabal and dist-newstyle)
    - tar -cf - $(.ci/get_build_dist.sh) | zstd -T${THREADS} -15 > dist.tar.zst

build-clash-dev:
  extends: .test-common
  script:
    - .ci/build_clash_dev.sh

haddock:
  extends: .common
  script:
    - .ci/build_docs.sh

prelude:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-prelude:unittests

prelude:doctests:
  extends: .test-common-local
  script:
    - cabal v2-run clash-prelude:doctests

lib:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-lib:unittests

cores:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-cores:unittests

cosim:unittests:
  extends: .test-common
  script:
    - cabal v2-run clash-cosim:tests

suite:vhdl:
  extends: .test-common-local
  script:
    - cabal v2-run -- testsuite -j$THREADS -p .VHDL --hide-successes

suite:verilog:
  extends: .test-common-local
  script:
    - cabal v2-run -- testsuite -j$THREADS -p .Verilog --hide-successes
