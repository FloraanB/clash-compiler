hackage-sdist:
  extends: .tests
  stage: pack
  interruptible: false
  variables:
    GHC_VERSION: 8.10.2
  script:
    - export THREADS=$(nproc)
    - export CABAL_JOBS=$(nproc)
    - export GHC=ghc-${GHC_VERSION}
    - .ci/setup.sh
    - .ci/build_sdist.sh clash-prelude
    - .ci/build_sdist.sh clash-lib
    - .ci/build_sdist.sh clash-ghc
  artifacts:
    paths:
      - clash-*.tar.gz  # clash-{prelude,lib,ghc}-$version{-docs,}.tar.gz
    expire_in: 1 week
  rules:
    - if: '$CI_COMMIT_TAG != null' # tags
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"

.hackage:
  extends: .tests
  interruptible: false
  stage: publish
  cache:
    key: hackage
  variables:
    GHC_VERSION: 8.10.2
  script:
    - export THREADS=$(nproc)
    - export CABAL_JOBS=$(nproc)
    - export GHC=ghc-${GHC_VERSION}
    - .ci/setup.sh
    - .ci/publish_sdist.sh clash-prelude
    - .ci/publish_sdist.sh clash-lib
    - .ci/publish_sdist.sh clash-ghc
  retry:
    max: 2

# Run every night, when explicitly triggered, or when tagged (release)
.run-nightly:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "trigger"
    - if: '$CI_COMMIT_TAG != null' # tags

# Create Debian packages.
debian-bindist:
  extends: .run-nightly
  image: docker.pkg.github.com/clash-lang/clash-compiler/bindist-debian-focal:2020-11-20
  stage: pack
  artifacts:
    when: always
    paths:
      - .ci/bindist/linux/debian/focal/build
    expire_in: 1 week
  script:
    - .ci/bindist/linux/debian/scripts/build.sh focal

# Test debian distribution
debian-bindist-test:
  extends: .run-nightly
  image: ubuntu:focal
  stage: pack-test
  script:
    - apt-get update
    - cd .ci/bindist/linux/debian/focal/build && apt-get -y install ./*/*.deb && cd -
    - apt-get -y install iverilog
    - clash-testsuite -p .Verilog --hide-successes
  tags:
    - local

# Use binary distribution built in `snap-bindist` to build a snap package.
.snap:
  image: docker.pkg.github.com/clash-lang/clash-compiler/snapcraft:2020-11-20
  stage: publish
  cache:
    key: snap-last-run-hash-$CI_COMMIT_REF_SLUG
    paths:
      - snap-last-run-hash
  artifacts:
    when: always
    paths:
      - .ci/bindist/linux/snap/*.snap
    expire_in: 1 week
  script:
    - .ci/snap.sh build
    # TODO: Smoke test for snaps. Not sure how to do this on CI, as we need
    #       snapd to be running (?).
    - .ci/snap.sh publish
  retry:
    max: 2
